" Use Vim Settings
set nocompatible
set shell=/bin/bash

" ================  General  ====================

set number                      " Line Numbers
set clipboard=unnamed           " Share clipboard with OS
set backspace=indent,eol,start  " Allow backspace in insert mode
set history=1000                " Longer command history
set encoding=utf-8
set showcmd                     " Show incomplete commands in modeline
set noswapfile                  " Disable swap files
set visualbell                  " No sounds
set noballooneval               " Disable the pesky ri errors in ruby files
set autoread                    " Autoread files with changes (No more popup)

" ================  Leader  ====================

nnoremap <SPACE> <Nop>
let mapleader = " " "changing the standard leader to space

" ================  Searching  ====================

set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

" ================  Tabs  ====================

set tabstop=2
set shiftwidth=2
set shiftwidth=2
set softtabstop=2
set expandtab
set smarttab

" ================  Invisibles  ====================

set list                          " Show invisible characters
set listchars=""                  " Reset the listchars
set listchars=tab:\ \             " a tab should display as "  ", trailing whitespace as "."
set listchars+=trail:.            " show trailing spaces as dots
set listchars+=extends:>          " The character to show in the last column when wrap is
                                  " off and the line continues beyond the right of the screen
set listchars+=precedes:<         " The character to show in the last column when wrap is
                                  " off and the line continues beyond the right of the screen

" ================  Vundle  ====================

filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'

" -- Color Schemes --
Bundle 'flazz/vim-colorschemes'

" -- Tools --
Bundle 'kien/ctrlp.vim'
Bundle 'tacahiroy/ctrlp-funky'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-repeat'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-endwise'
Bundle 'tomtom/tcomment_vim'
Bundle 'vim-scripts/Align'
Bundle 'Raimondi/delimitMate'
Bundle 'Valloric/YouCompleteMe'
Bundle 'skammer/vim-css-color'
Bundle 'spolu/dwm.vim'
Bundle 'wincent/Command-T'
Bundle 'mattn/zencoding-vim'

" -- Utilities --
Bundle 'mileszs/ack.vim'
Bundle 'SirVer/ultisnips'
Bundle 'SQLUtilities'

" -- Syntax --
Bundle 'nono/vim-handlebars'
Bundle 'vim-scripts/VimClojure'
Bundle 'vim-scripts/fish-syntax'
Bundle 'kchmck/vim-coffee-script'
Bundle 'vim-ruby/vim-ruby'
Bundle 'othree/html5.vim'
Bundle 'saltstack/salt-vim'
Bundle 'rodjek/vim-puppet'
Bundle 'jnwhiteh/vim-golang'
Bundle 'cakebaker/scss-syntax.vim'

" -- Syntax Checker --
Bundle 'scrooloose/syntastic'
Bundle 'tomtom/quickfixsigns_vim'

filetype plugin indent on
syntax enable

set omnifunc=syntaxcomplete#Complete

" ================  Netrw  ==================

cmap E<CR> Ex<CR> " Syntastic :E workaround
nnoremap <C-e> :Explore<CR>:9<CR> " Open Netrw dir listing and goto 9th line

" ================  Window Switching  ==================

set splitbelow
set splitright

" ================  Searching  ==================
:nnoremap <silent> , :nohlsearch<Bar>:echo<CR>


" ================  File Types  ==================

if has("autocmd")
  filetype on
  autocmd FileType ruby setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType javascript setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType scss setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType php setlocal ts=4 sts=4 sw=4 expandtab
  autocmd FileType html setlocal ts=4 sts=4 sw=4 expandtab

  au BufRead,BufNewFile *.hbs.erb set filetype=handlebars
endif

" ================  Noop Arrows  ==================

noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

" ================  Persistent Undo  ==================

silent !mkdir ~/.vim/backups > /dev/null 2>&1
set undodir=~/.vim/backups
set undofile

" ================  Ack  ==================

nmap <leader>a :Ack<Space>

" ================  TComment  ==================

nmap <leader><leader> :TComment<cr>
omap <leader><leader> :TComment<cr>
vmap <leader><leader> :TComment<cr>

" ================  CtrlP  ==================

let g:ctrlp_working_path_mode = 0
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_extensions = ['funky']
let g:ctrlp_map = '<c-pee>'
let g:ctrlp_max_height = 20
let g:ctrlp_by_filename = 1
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files . -co --exclude-standard']

nnoremap <C-t> :CtrlPFunky<Cr>

" ================  Command-T  ==================

nnoremap <C-p> :CommandT<Cr>

" ================  UltiSnips  ==================

let g:UltiSnipsSnippetDirectories = ["../.snippets"]
let g:UltiSnipsExpandTrigger = "<C-tab>"

" ================  Syntastic  ==================

let g:syntastic_auto_loc_list=1
let g:syntastic_mode_map = { 'mode': 'active',
                           \ 'active_filetypes': ['ruby', 'php', 'javascript', 'css', 'sass', 'scss'],
                           \ 'passive_filetypes': ['html'] }
let g:syntastic_quiet_warnings = 1
let g:syntastic_phpcs_disable = 1

" ================  Additional Commands  ==================

" Edit vimrc
nmap <leader>v :tabedit $MYVIMRC<CR>

" Strip trailing whitespace
" Call as :StripWhitespace or <leader>ss
function! StripWhitespace()
  let save_cursor = getpos(".")
  let old_query = getreg('/')
  :%s/\s\+$//e
  call setpos('.', save_cursor)
  call setreg('/', old_query)
endfunction

command! StripWhitespace call StripWhitespace()
noremap <leader>ss :call StripWhitespace()<CR>

" === Pretty Print JSON
" Call as :PrettPrintJSON
command! PrettyPrintJSON execute "%!python -m json.tool" | call StripWhitespace()
